[2019-11-02 12:16:57,555] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-11-02 12:20:21,617] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-11-02 12:20:21,635] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2019-11-02 12:20:21,636] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2019-11-02 12:20:21,639] INFO [Controller id=0] Initialized controller epoch to 1 and zk version 0 (kafka.controller.KafkaController)
[2019-11-02 12:20:21,639] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2019-11-02 12:20:21,652] INFO [Controller id=0] Epoch incremented to 2 (kafka.controller.KafkaController)
[2019-11-02 12:20:21,652] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2019-11-02 12:20:21,654] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-11-02 12:20:21,657] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-11-02 12:20:21,659] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2019-11-02 12:20:21,680] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-11-02 12:20:21,693] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-11-02 12:20:21,713] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2019-11-02 12:20:21,715] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-11-02 12:20:21,716] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2019-11-02 12:20:21,716] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-11-02 12:20:21,717] INFO [Controller id=0] Current list of topics in the cluster: Set(response_topic, post_book) (kafka.controller.KafkaController)
[2019-11-02 12:20:21,717] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-11-02 12:20:21,722] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-11-02 12:20:21,723] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2019-11-02 12:20:21,723] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-11-02 12:20:21,726] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2019-11-02 12:20:21,735] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2019-11-02 12:20:21,743] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2019-11-02 12:20:21,743] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.5.50.96:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-11-02 12:20:21,770] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=response_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=post_book,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2019-11-02 12:20:21,770] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2019-11-02 12:20:21,772] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2019-11-02 12:20:21,774] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(post_book-0 -> OnlinePartition, response_topic-0 -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2019-11-02 12:20:21,775] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2019-11-02 12:20:21,779] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-11-02 12:20:21,779] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-11-02 12:20:21,779] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-11-02 12:20:21,779] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-11-02 12:20:21,780] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-11-02 12:20:21,786] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-11-02 12:20:26,790] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 12:20:26,792] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_book-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 12:20:26,794] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 12:20:26,794] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 12:21:54,702] DEBUG [Controller id=0] Delete topics listener fired for topics post_book to be deleted (kafka.controller.KafkaController)
[2019-11-02 12:21:54,703] INFO [Controller id=0] Starting topic deletion for topics post_book (kafka.controller.KafkaController)
[2019-11-02 12:21:54,705] INFO [Topic Deletion Manager 0], Handling deletion for topics post_book (kafka.controller.TopicDeletionManager)
[2019-11-02 12:21:54,708] INFO [Topic Deletion Manager 0], Deletion of topic post_book (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 12:21:54,709] INFO [Topic Deletion Manager 0], Topic deletion callback for post_book (kafka.controller.TopicDeletionManager)
[2019-11-02 12:21:54,713] INFO [Topic Deletion Manager 0], Partition deletion callback for post_book-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 12:21:54,729] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 12:21:54,729] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=post_book,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 12:21:54,730] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=post_book,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 12:21:54,732] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=post_book,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 12:21:54,732] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 12:21:54,756] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@3a1ebc1e (kafka.controller.KafkaController)
[2019-11-02 12:21:54,758] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=post_book,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 12:21:54,760] INFO [Topic Deletion Manager 0], Handling deletion for topics post_book (kafka.controller.TopicDeletionManager)
[2019-11-02 12:21:54,780] INFO [Topic Deletion Manager 0], Deletion of topic post_book successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 12:21:54,781] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 12:21:54,782] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 12:22:21,059] DEBUG [Controller id=0] Delete topics listener fired for topics response_topic to be deleted (kafka.controller.KafkaController)
[2019-11-02 12:22:21,059] INFO [Controller id=0] Starting topic deletion for topics response_topic (kafka.controller.KafkaController)
[2019-11-02 12:22:21,060] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2019-11-02 12:22:21,060] INFO [Topic Deletion Manager 0], Deletion of topic response_topic (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 12:22:21,060] INFO [Topic Deletion Manager 0], Topic deletion callback for response_topic (kafka.controller.TopicDeletionManager)
[2019-11-02 12:22:21,060] INFO [Topic Deletion Manager 0], Partition deletion callback for response_topic-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 12:22:21,071] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 12:22:21,071] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 12:22:21,071] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 12:22:21,072] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 12:22:21,072] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 12:22:21,080] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@6ea7fa05 (kafka.controller.KafkaController)
[2019-11-02 12:22:21,080] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 12:22:21,080] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2019-11-02 12:22:21,088] INFO [Topic Deletion Manager 0], Deletion of topic response_topic successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 12:22:21,089] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 12:22:21,089] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 12:24:15,918] INFO [Controller id=0] New topics: [Set(post_book)], deleted topics: [Set()], new partition replica assignment [Map(post_book-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 12:24:15,919] INFO [Controller id=0] New partition creation callback for post_book-0 (kafka.controller.KafkaController)
[2019-11-02 12:24:36,692] INFO [Controller id=0] New topics: [Set(response_topic)], deleted topics: [Set()], new partition replica assignment [Map(response_topic-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 12:24:36,693] INFO [Controller id=0] New partition creation callback for response_topic-0 (kafka.controller.KafkaController)
[2019-11-02 12:25:26,793] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 12:25:26,796] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_book-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 12:25:26,796] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 12:25:26,796] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 12:30:26,792] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 12:30:26,794] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_book-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 12:30:26,795] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 12:30:26,795] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 12:35:26,796] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 12:35:26,798] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_book-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 12:35:26,798] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 12:35:26,798] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 12:40:26,797] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 12:40:26,799] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_book-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 12:40:26,799] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 12:40:26,800] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 12:45:26,795] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 12:45:26,796] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_book-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 12:45:26,796] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 12:45:26,796] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 12:50:26,796] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 12:50:26,796] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_book-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 12:50:26,796] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 12:50:26,796] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 12:55:26,796] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 12:55:26,797] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_book-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 12:55:26,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 12:55:26,798] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
